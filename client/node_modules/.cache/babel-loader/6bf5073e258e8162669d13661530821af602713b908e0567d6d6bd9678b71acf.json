{"ast":null,"code":"var _jsxFileName = \"/Users/sudhanshuj020/Desktop/ToDo_Application/mern-todo-app/client/src/components/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { motion } from 'framer-motion';\n\n// const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://localhost:3001/api';\nconst Login = ({\n  onLogin,\n  onError\n}) => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const res = await fetch(`${API_URL}/auth/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      const data = await res.json();\n      if (res.ok) {\n        onLogin({\n          accessToken: data.accessToken,\n          refreshToken: data.refreshToken\n        }, 'Login');\n      } else {\n        onError(data.message || 'Login failed');\n      }\n    } catch (err) {\n      onError('Error logging in');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(motion.form, {\n    onSubmit: handleSubmit,\n    className: \"auth-form\",\n    initial: {\n      opacity: 0,\n      y: 10\n    },\n    animate: {\n      opacity: 1,\n      y: 0\n    },\n    transition: {\n      duration: 0.3\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(motion.input, {\n      type: \"text\",\n      value: username,\n      onChange: e => setUsername(e.target.value),\n      placeholder: \"Username\",\n      className: \"auth-input\",\n      required: true,\n      whileFocus: {\n        scale: 1.02\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(motion.input, {\n      type: \"password\",\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      placeholder: \"Password\",\n      className: \"auth-input\",\n      required: true,\n      whileFocus: {\n        scale: 1.02\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(motion.button, {\n      type: \"submit\",\n      className: \"auth-btn\",\n      whileHover: {\n        scale: 1.05\n      },\n      whileTap: {\n        scale: 0.95\n      },\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"wuQOK7xaXdVz4RMrZQhWbI751Oc=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","motion","jsxDEV","_jsxDEV","API_URL","Login","onLogin","onError","_s","username","setUsername","password","setPassword","handleSubmit","e","preventDefault","res","fetch","method","headers","body","JSON","stringify","data","json","ok","accessToken","refreshToken","message","err","form","onSubmit","className","initial","opacity","y","animate","transition","duration","children","fileName","_jsxFileName","lineNumber","columnNumber","input","type","value","onChange","target","placeholder","required","whileFocus","scale","button","whileHover","whileTap","_c","$RefreshReg$"],"sources":["/Users/sudhanshuj020/Desktop/ToDo_Application/mern-todo-app/client/src/components/Login.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { motion } from 'framer-motion';\n\n// const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001/api';\nconst API_URL = 'http://localhost:3001/api';\n\nconst Login = ({ onLogin, onError }) => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const res = await fetch(`${API_URL}/auth/login`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ username, password }),\n      });\n      const data = await res.json();\n      if (res.ok) {\n        onLogin({ accessToken: data.accessToken, refreshToken: data.refreshToken }, 'Login');\n      } else {\n        onError(data.message || 'Login failed');\n      }\n    } catch (err) {\n      onError('Error logging in');\n    }\n  };\n\n  return (\n    <motion.form\n      onSubmit={handleSubmit}\n      className=\"auth-form\"\n      initial={{ opacity: 0, y: 10 }}\n      animate={{ opacity: 1, y: 0 }}\n      transition={{ duration: 0.3 }}\n    >\n      <h2>Login</h2>\n      <motion.input\n        type=\"text\"\n        value={username}\n        onChange={(e) => setUsername(e.target.value)}\n        placeholder=\"Username\"\n        className=\"auth-input\"\n        required\n        whileFocus={{ scale: 1.02 }}\n      />\n      <motion.input\n        type=\"password\"\n        value={password}\n        onChange={(e) => setPassword(e.target.value)}\n        placeholder=\"Password\"\n        className=\"auth-input\"\n        required\n        whileFocus={{ scale: 1.02 }}\n      />\n      <motion.button\n        type=\"submit\"\n        className=\"auth-btn\"\n        whileHover={{ scale: 1.05 }}\n        whileTap={{ scale: 0.95 }}\n      >\n        Login\n      </motion.button>\n    </motion.form>\n  );\n};\n\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}